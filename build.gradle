plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'id.my.hendisantika'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'dev.miku:r2dbc-mysql:0.8.2.RELEASE'
    runtimeOnly 'io.asyncer:r2dbc-mysql:1.4.0'
    implementation("io.r2dbc:r2dbc-pool:1.0.0.RELEASE")
    implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // https://mvnrepository.com/artifact/org.reactivecommons/async-commons-rabbit-starter
    implementation 'org.reactivecommons:async-commons-rabbit-starter:5.6.0' //cliente para enviar a un domain event

    //para enviar a una cola particular
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    //pra recibir mensajes de una cola particular
    implementation 'io.projectreactor.rabbitmq:reactor-rabbitmq:1.5.5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'io.projectreactor:reactor-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
    useJUnitPlatform()
}
